--[[
Open source
Made by !vcsk0#1516
Credits to me

Credits to the Owner Who Made The ESP Script
]]

local CoreGui = game:GetService("StarterGui")
local Players = game:GetService("Players")

local function isNumber(str)
    if tonumber(str) ~= nil or str == 'inf' then
        return true
    end
    return false
end

-- Função de Detecção de Anti-Cheat
local function detectAntiCheat()
    local suspiciousNames = {"anticheat", "security", "protector", "admin"}  -- Lista de nomes suspeitos
    local function checkScripts(container)
        for _, child in ipairs(container:GetChildren()) do
            if child:IsA("Script") or child:IsA("LocalScript") or child:IsA("ModuleScript") then
                for _, name in ipairs(suspiciousNames) do
                    if string.find(child.Name:lower(), name) then
                        return true
                    end
                end
            end
            if checkScripts(child) then return true end
        end
    end
    return checkScripts(game.Workspace) or checkScripts(game.Players) or checkScripts(game.ReplicatedStorage)
end

-- Variáveis Globais
local HitboxSize = 15
local HitboxTransparency = 0.9
local HitboxStatus = false
local TeamCheck = false
local Walkspeed = Players.LocalPlayer.Character.Humanoid.WalkSpeed
local Jumppower = Players.LocalPlayer.Character.Humanoid.JumpPower
local TPSpeed = 3
local TPWalk = false

-- UI
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/UI-Library/main/Source/MyUILib(Unamed).lua"))()
local Window = Library:Create("Hitbox Expander")

local ToggleGui = Instance.new("ScreenGui")
local Toggle = Instance.new("TextButton")

ToggleGui.Name = "ToggleGui_HE"
ToggleGui.Parent = game.CoreGui

Toggle.Name = "Toggle"
Toggle.Parent = ToggleGui
Toggle.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
Toggle.BackgroundTransparency = 0.660
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0.0650164187, 0, 0.0888099447, 0)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "Toggle"
Toggle.TextScaled = true
Toggle.TextColor3 = Color3.fromRGB(40, 40, 40)
Toggle.TextSize = 24.000
Toggle.TextXAlignment = Enum.TextXAlignment.Left
Toggle.Active = true
Toggle.Draggable = true
Toggle.MouseButton1Click:Connect(function()
    Library:ToggleUI()
end)

local HomeTab = Window:Tab("Home", "rbxassetid://10888331510")
local PlayerTab = Window:Tab("Players", "rbxassetid://12296135476")
local VisualTab = Window:Tab("Visuals", "rbxassetid://12308581351")

HomeTab:InfoLabel("only works on some games!")

HomeTab:Section("Settings")

HomeTab:TextBox("Hitbox Size", function(value)
    HitboxSize = tonumber(value)
end)

HomeTab:TextBox("Hitbox Transparency", function(number)
    HitboxTransparency = tonumber(number)
end)

HomeTab:Section("Main")

HomeTab:Toggle("Status: ", function(state)
    HitboxStatus = state
    game:GetService('RunService').RenderStepped:Connect(function()
        if HitboxStatus then
            if detectAntiCheat() then
                print("Anti-cheat detected. Disabling hitbox expansion.")
                HitboxStatus = false
                return
            end
            for _, v in ipairs(Players:GetPlayers()) do
                if v.Name ~= Players.LocalPlayer.Name and (not TeamCheck or Players.LocalPlayer.Team ~= v.Team) then
                    pcall(function()
                        v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
                        v.Character.HumanoidRootPart.Transparency = HitboxTransparency
                        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                        v.Character.HumanoidRootPart.Material = Enum.Material.Neon
                        v.Character.HumanoidRootPart.CanCollide = false
                    end)
                else
                    pcall(function()
                        v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                        v.Character.HumanoidRootPart.Transparency = 1
                        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
                        v.Character.HumanoidRootPart.Material = Enum.Material.Plastic
                        v.Character.HumanoidRootPart.CanCollide = false
                    end)
                end
            end
        end
    end)
end)

HomeTab:Toggle("Team Check", function(state)
    TeamCheck = state
end)

HomeTab:Keybind("Toggle UI", Enum.KeyCode.F, function()
    Library:ToggleUI()
end)

PlayerTab:TextBox("WalkSpeed", function(value)
    Walkspeed = tonumber(value)
    pcall(function()
        Players.LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
    end)
end)

PlayerTab:Toggle("Loop WalkSpeed", function(state)
    local loopW = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopW then
            pcall(function()
                Players.LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
            end)
        end
    end)
end)

PlayerTab:TextBox("JumpPower", function(value)
    Jumppower = tonumber(value)
    pcall(function()
        Players.LocalPlayer.Character.Humanoid.JumpPower = Jumppower
    end)
end)

PlayerTab:Toggle("Loop JumpPower", function(state)
    local loopJ = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopJ then
            pcall(function()
                Players.LocalPlayer.Character.Humanoid.JumpPower = Jumppower
            end)
        end
    end)
end)

PlayerTab:TextBox("TP Speed", function(value)
    TPSpeed = tonumber(value)
end)

PlayerTab:Toggle("TP Walk", function(s)
    TPWalk = s
    local hb = game:GetService("RunService").Heartbeat
    local player = Players
    local lplr = player.LocalPlayer
    local chr = lplr.Character
    local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
    while TPWalk and hb:Wait() and chr and hum and hum.Parent do
        if hum.MoveDirection.Magnitude > 0 then
            if TPSpeed and isNumber(TPSpeed) then
                chr:TranslateBy(hum.MoveDirection * TPSpeed)
            else
                chr:TranslateBy(hum.MoveDirection)
            end
        end
    end
end)

PlayerTab:Slider("Fov", game.Workspace.CurrentCamera.FieldOfView, 120, function(v)
    game.Workspace.CurrentCamera.FieldOfView = v
end)

PlayerTab:Toggle("Noclip", function(s)
    local Noclip = s
    game:GetService("RunService").Heartbeat:Connect(function()
        if Noclip then
            game:GetService("RunService").Stepped:wait()
            Players.LocalPlayer.Character.Head.CanCollide = false
            Players.LocalPlayer.Character.Torso.CanCollide = false
        end
    end)
end)

PlayerTab:Toggle("Infinite Jump", function(s)
    local InfJ = s
    game:GetService("UserInputService").JumpRequest:connect(function()
        if InfJ then
            Players.LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
        end
    end)
end)

PlayerTab:Button("Rejoin", function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, Players.LocalPlayer)
end)

VisualTab:InfoLabel("Wait 3-10 seconds")

VisualTab:Toggle("Character Highlight", function(state)
    local enabled = state
    local filluseteamcolor = true
    local outlineuseteamcolor = true
    local fillcolor = Color3.new(0, 0, 0)
    local outlinecolor = Color3.new(1, 1, 1)
    local filltrans = 0.5
    local outlinetrans = 0.5

    loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/Highlight-ESP.lua"))()
end)

if game.PlaceId == 3082002798 then
    local GamesTab = Window:Tab("Games", "rbxassetid://15426471035")
    GamesTab:InfoLabel("Game: " .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
    GamesTab:Button("No Cooldown", function()
        for _, v in pairs(game:GetService('ReplicatedStorage')['Shared_Modules'].Tools:GetDescendants()) do
            if v:IsA('ModuleScript') then
                local Module = require(v)
                Module.DEBOUNCE = 0
            end
        end
    end)
end
